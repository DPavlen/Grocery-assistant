# Generated by Django 3.2 on 2023-10-08 21:22

import colorfield.fields
import core.constants
import core.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompositionOfDish',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'amount',
                    models.SmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(
                                1,
                                message='Минимальное количество ингредиетов в блюде должно быть не меньше 1.'),
                            django.core.validators.MaxValueValidator(
                                100,
                                message='Максимально количество ингредиетов в блюде не превышает 100.')],
                        verbose_name='Количество ингредиентов')),
            ],
            options={
                'verbose_name': 'Состав блюда | Ингредиент в рецепте',
                'verbose_name_plural': 'Состав блюда | Ингредиенты в рецепте',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Избранный рецепт',
                'verbose_name_plural': 'Избранное',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200,
                 verbose_name='Название ингредиента для рецепта')),
                ('measurement_unit', models.CharField(
                    max_length=50, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True,
                 max_length=200, verbose_name='Название рецепта')),
                ('image',
                 models.ImageField(blank=True,
                                   help_text='Добавьте рецепт',
                                   upload_to='recipes/images',
                                   verbose_name='Изображение рецепта')),
                ('text',
                 models.TextField(help_text='Введите Описание рецепта',
                                  verbose_name='Описание рецепта')),
                (
                    'cooking_time',
                    models.PositiveSmallIntegerField(
                        help_text='Ввведите время приготовления блюда',
                        validators=[
                            django.core.validators.MinValueValidator(
                                1,
                                message='Время приготовления блюда должно быть не менее 1 минут.'),
                            django.core.validators.MaxValueValidator(
                                600,
                                message='Время приготовления блюда не превышает более 600 минут.')],
                        verbose_name='Время приготовления блюда')),
                ('author',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   related_name='recipes',
                                   to=settings.AUTH_USER_MODEL,
                                   verbose_name='Автор публикации рецепта')),
                ('ingredients',
                 models.ManyToManyField(related_name='recipes',
                                        through='recipes.CompositionOfDish',
                                        to='recipes.Ingredient',
                                        verbose_name='Состав блюда')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name',
                 models.CharField(max_length=core.constants.Lenght['MAX_LENGT_NAME'],
                                  unique=True,
                                  verbose_name='Название тега для рецепта')),
                ('color',
                 colorfield.fields.ColorField(default='#FF0000',
                                              image_field=None,
                                              max_length=core.constants.Lenght['MAX_LENGT_NAME_COLOR'],
                                              samples=None,
                                              unique=True,
                                              validators=[
                                                  core.validators.ColorValidator],
                                              verbose_name='Цвет в формате HEX')),
                ('slug',
                 models.SlugField(max_length=core.constants.Lenght['MAX_LENGT_NAME_SLUG'],
                                  unique=True,
                                  validators=[core.validators.SlugValidator],
                                  verbose_name='Slug названия тега')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ShoppingCart',
                                   to='recipes.recipe',
                                   verbose_name='Рецепты пользователей')),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ShoppingCart',
                                   to=settings.AUTH_USER_MODEL,
                                   verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина покупок',
                'verbose_name_plural': 'Корзина покупок',
                'ordering': ['user'],
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(
                related_name='recipes',
                to='recipes.Tag',
                verbose_name='Теги'),
        ),
        migrations.AddConstraint(
            model_name='ingredient',
            constraint=models.UniqueConstraint(
                fields=(
                    'name',
                    'measurement_unit'),
                name='unique_measurement_unit'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='recipe',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='favorites',
                to='recipes.recipe',
                verbose_name='Рецепты пользователей'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='favorites',
                to=settings.AUTH_USER_MODEL,
                verbose_name='Пользователи'),
        ),
        migrations.AddField(
            model_name='compositionofdish',
            name='ingredient',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='recipes.ingredient',
                verbose_name='Ингредиенты в рецепте'),
        ),
        migrations.AddField(
            model_name='compositionofdish',
            name='recipe',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='composition_list',
                to='recipes.recipe',
                verbose_name='Рецепты'),
        ),
        migrations.AddConstraint(
            model_name='shoppingcart',
            constraint=models.UniqueConstraint(
                fields=('user', 'recipe'), name='unique_shopping_cart'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(
                fields=('user', 'recipe'), name='unique_favourites'),
        ),
    ]
