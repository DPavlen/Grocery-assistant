# Generated by Django 3.2 on 2023-10-11 19:58

import colorfield.fields
import core.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CompositionOfDish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, message='Минимальное количество ингредиетов в блюде должно быть не меньше 1.'), django.core.validators.MaxValueValidator(100, message='Максимально количество ингредиетов в блюде не превышает 100.')], verbose_name='Количество ингредиентов')),
            ],
            options={
                'verbose_name': 'Состав блюда | Ингредиент в рецепте',
                'verbose_name_plural': 'Состав блюда | Ингредиенты в рецепте',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Избранный рецепт',
                'verbose_name_plural': 'Избранное',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название ингредиента для рецепта')),
                ('measurement_unit', models.CharField(max_length=50, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название рецепта')),
                ('image', models.ImageField(blank=True, help_text='Добавьте рецепт', upload_to='recipes/images', verbose_name='Изображение рецепта')),
                ('text', models.TextField(help_text='Введите Описание рецепта', verbose_name='Описание рецепта')),
                ('cooking_time', models.PositiveSmallIntegerField(help_text='Ввведите время приготовления блюда', validators=[django.core.validators.MinValueValidator(1, message='Время приготовления блюда должно быть не менее 1 минут.'), django.core.validators.MaxValueValidator(600, message='Время приготовления блюда не превышает более 600 минут.')], verbose_name='Время приготовления блюда')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название тега для рецепта')),
                ('color', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=7, samples=None, unique=True, validators=[core.validators.ColorValidator], verbose_name='Цвет в формате HEX')),
                ('slug', models.SlugField(max_length=150, unique=True, validators=[core.validators.SlugValidator], verbose_name='Slug названия тега')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ShoppingCart', to='recipes.recipe', verbose_name='Рецепты пользователей')),
            ],
            options={
                'verbose_name': 'Корзина покупок',
                'verbose_name_plural': 'Корзина покупок',
                'ordering': ['user'],
            },
        ),
    ]
